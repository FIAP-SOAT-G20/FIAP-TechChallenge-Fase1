definitions:
  domain.Category:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  domain.Product:
    properties:
      active:
        type: boolean
      category:
        $ref: '#/definitions/domain.Category'
      categoryID:
        type: integer
      createdAt:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: number
      updatedAt:
        type: string
    type: object
  handler.UpdateProduct:
    properties:
      categoryID:
        example: 1
        type: integer
      description:
        example: The best burger in the world
        type: string
      name:
        example: McDonald's Big Mac
        type: string
      price:
        example: 29.9
        type: number
    type: object
  handler.createProductRequest:
    properties:
      categoryID:
        example: 1
        type: integer
      description:
        example: The best burger in the world
        type: string
      name:
        example: BK Mega Stacker 2.0
        type: string
      price:
        example: 29.9
        type: number
    required:
    - categoryID
    - description
    - name
    - price
    type: object
  response.ProductPaginated:
    properties:
      limit:
        type: integer
      page:
        type: integer
      products:
        items:
          $ref: '#/definitions/domain.Product'
        type: array
      total:
        type: integer
    type: object
info:
  contact: {}
  description: API para o Tech Challenge da FIAP - Fase 1 - G20 - 10 SOAT
  title: FIAP Tech Challenge Fase 1 - G20 - 10 SOAT
  version: "1"
paths:
  /api/v1/products:
    get:
      consumes:
      - application/json
      description: List products
      parameters:
      - description: Product name
        in: query
        name: name
        type: string
      - description: Category ID
        in: query
        name: categoryID
        type: integer
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ProductPaginated'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List products
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Create a product
      parameters:
      - description: Product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/handler.createProductRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Product'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a product
      tags:
      - products
  /api/v1/products/{id}:
    get:
      consumes:
      - application/json
      description: Get a product
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Product'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a product
      tags:
      - products
    put:
      consumes:
      - application/json
      description: Update a product
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/handler.UpdateProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Product'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a product
      tags:
      - products
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and the access token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
